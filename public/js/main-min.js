var static=require("node-static"),http=require("http"),port=process.env.PORT,directory=__dirname+"/public";void 0!==port&&port||(directory="./public",port=8080);var file=new static.Server(directory),app=http.createServer(function(e,o){e.addListener("end",function(){file.serve(e,o)}).resume()}).listen(port);console.log("The server is running");var io=require("socket.io").listen(app);io.sockets.on("connection",function(e){function o(){for(var o=["*** Server Log Message: "],s=0;s<arguments.length;s++)o.push(arguments[s]),console.log(arguments[s]);e.emit("log",o),e.broadcast.emit("log",o)}o("A web site connected to the server"),e.on("disconnect",function(e){o("A web site disconnected to the server")}),e.on("join_room",function(s){if(o("server received a command","join_room",s),void 0===s||!s){var r="join_room had no payload, command aborted";return o(r),void e.emit("join_room_response",{result:"fail",message:r})}var i=s.room;if(void 0===i||!i)return r="join_room didn't specify a room, command aborted",o(r),void e.emit("join_room_response",{result:"fail",message:r});var n=s.username;if(void 0===n||!n)return r="join_room didn't specify a room, command aborted",o(r),void e.emit("join_room_response",{result:"fail",message:r});e.join(i);var t=io.sockets.adapter.rooms[i];if(void 0===t||!t)return r="join_room didn't create a room, command aborted",o(r),void e.emit("join_room_response",{result:"fail",message:r});var a=t.length,m={result:"success",room:i,username:n,membership:a+1};io.sockets.in(i).emit("join_room_response",m),o("Room "+i+" was just joined by "+n)}),e.on("send_message",function(s){if(o("server received a command","send_message",s),void 0===s||!s){var r="send_message had no payload, command aborted";return o(r),void e.emit("send_message_response",{result:"fail",message:r})}var i=s.room;if(void 0===i||!i)return r="send_message didn't specify a room, command aborted",o(r),void e.emit("send_message_response",{result:"fail",message:r});var n=s.username;if(void 0===n||!n)return r="send_message didn't specify a username, command aborted",o(r),void e.emit("send_message_response",{result:"fail",message:r});var t=s.message;if(void 0===t||!t)return r="send_message didn't specify a message, ABORTED",o(r),void e.emit("send_message_response",{result:"fail",message:r});var a={result:"success",room:i,username:n,message:t};io.sockets.in(i).emit("send_message_response",a),o("Message sent to room "+i+" by "+n)})});